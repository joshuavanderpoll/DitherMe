name: Build DitherMe

permissions:
  contents: write

on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  build:
    name: Build DitherMe
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Python Environment
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install System Dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt install python3-tk python3-dev libpng-dev build-essential -y

      - name: Install System Dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install libpng

      - name: Install System Dependencies (Windows)
        if: matrix.os == 'windows-latest'
        shell: cmd
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          cd vcpkg
          .\bootstrap-vcpkg.bat
          .\vcpkg.exe install libpng:x64-windows
          set "VCPKG_ROOT=%CD%"
          echo "VCPKG_ROOT=%VCPKG_ROOT%" >> %GITHUB_ENV%

      - name: Debug vcpkg Installation (Windows)
        if: matrix.os == 'windows-latest'
        shell: cmd
        run: |
          echo VCPKG_ROOT=%VCPKG_ROOT%
          dir "%VCPKG_ROOT%\installed\x64-windows\include" || echo "Include directory not found"
          dir "%VCPKG_ROOT%\installed\x64-windows\lib" || echo "Lib directory not found"
          dir "%VCPKG_ROOT%\installed\x64-windows\include" | findstr /i "png.h" || echo "png.h not found"
          dir "%VCPKG_ROOT%\installed\x64-windows\lib" | findstr /i "libpng16.lib" || echo "libpng16.lib not found"

      - name: Install Python Dependencies (Windows)
        if: matrix.os == 'windows-latest'
        shell: cmd
        run: |
          python -m pip install --upgrade pip setuptools pyinstaller
          if exist requirements.txt pip install -r requirements.txt
                
      - name: Install Python Dependencies (Linux/macOS)
        if: matrix.os != 'windows-latest'
        run: |
          python3 -m pip install --upgrade pip setuptools pyinstaller
          if [ -f requirements.txt ]; then
            python3 -m pip install -r requirements.txt
          fi

      - name: Build PNG Library
        if: matrix.os != 'windows-latest'
        run: |
          make clean
          make

      - name: Build PNG Library (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          mkdir build && cd build
          cmake -S %GITHUB_WORKSPACE%\vcpkg\installed\x64-windows -B . -DCMAKE_INSTALL_PREFIX=%GITHUB_WORKSPACE%\png_lib
          cmake --build . --target install
        shell: cmd

      - name: Compile and Install Dithering Algorithms
        run: |
          python setup.py clean --all
          pip install -e . --verbose

      - name: Build Application (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          pyinstaller --clean --windowed --onefile --name "DitherMe" --icon="assets/icon.ico" DitherMe/__main__.py
          mkdir dist\windows 2>nul || echo Folder exists
          move dist\DitherMe.exe dist\windows\DitherMe.exe

      - name: Build Application (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          pyinstaller --clean --windowed --name "DitherMe" --icon="assets/icon.icns" --osx-bundle-identifier=nl.joshuavanderpoll.ditherme DitherMe/__main__.py
          mkdir -p dist/macos
          mv dist/DitherMe.app dist/macos/DitherMe.app

      - name: Build Application (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          pyinstaller --clean --onefile --name "DitherMe" DitherMe/__main__.py
          mkdir -p dist/ubuntu
          mv dist/DitherMe dist/ubuntu/DitherMe

      - name: Create DMG (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          mkdir -p dist/dmg
          hdiutil create -volname "DitherMe" -srcfolder dist/macos/DitherMe.app -ov -format UDZO dist/dmg/DitherMe.dmg

      - name: Upload Artifact (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: DitherMe-Windows
          path: dist/windows/DitherMe.exe

      - name: Upload DMG Artifact (macOS)
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: DitherMe-OSX
          path: dist/dmg/DitherMe.dmg

      - name: Upload Artifact (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: DitherMe-Ubuntu
          path: dist/ubuntu/DitherMe

  upload:
    name: Upload Release Assets
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'release'
    steps:
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/DitherMe-OSX/DitherMe.dmg
            dist/DitherMe-Windows/DitherMe.exe
            dist/DitherMe-Ubuntu/DitherMe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
